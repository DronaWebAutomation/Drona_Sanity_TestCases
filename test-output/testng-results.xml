<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="10" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-12-06T00:00:32 IST" name="Default suite" finished-at="2024-12-06T00:09:21 IST" duration-ms="528880">
    <groups>
    </groups>
    <test started-at="2024-12-06T00:00:32 IST" name="Default test" finished-at="2024-12-06T00:09:21 IST" duration-ms="528880">
      <class name="drona.smoketestcases.mainClass">
        <test-method is-config="true" signature="initializeReports()[pri:0, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:00:32 IST" name="initializeReports" finished-at="2024-12-06T00:00:32 IST" duration-ms="295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeReports -->
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:00:32 IST" name="setup" finished-at="2024-12-06T00:00:46 IST" duration-ms="14247" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@39a3984c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="doctorOnboardingWorkflowTest()[pri:1, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:00:47 IST" name="doctorOnboardingWorkflowTest" finished-at="2024-12-06T00:02:05 IST" duration-ms="78322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doctorOnboardingWorkflowTest -->
        <test-method is-config="true" signature="checkTestStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:02:05 IST" name="checkTestStatus" finished-at="2024-12-06T00:02:05 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void drona.smoketestcases.mainClass.doctorOnboardingWorkflowTest() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=doctorOnboardingWorkflowTest status=SUCCESS method=mainClass.doctorOnboardingWorkflowTest()[pri:1, instance:drona.smoketestcases.mainClass@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestStatus -->
        <test-method signature="loginWorkflowTest()[pri:2, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:02:05 IST" name="loginWorkflowTest" finished-at="2024-12-06T00:02:12 IST" duration-ms="6861" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWorkflowTest -->
        <test-method is-config="true" signature="checkTestStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:02:12 IST" name="checkTestStatus" finished-at="2024-12-06T00:02:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void drona.smoketestcases.mainClass.loginWorkflowTest() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=loginWorkflowTest status=SUCCESS method=mainClass.loginWorkflowTest()[pri:2, instance:drona.smoketestcases.mainClass@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestStatus -->
        <test-method signature="appointmentWorkflowTest()[pri:3, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:02:12 IST" name="appointmentWorkflowTest" finished-at="2024-12-06T00:03:00 IST" duration-ms="47970" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- appointmentWorkflowTest -->
        <test-method is-config="true" signature="checkTestStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:03:00 IST" name="checkTestStatus" finished-at="2024-12-06T00:03:00 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void drona.smoketestcases.mainClass.appointmentWorkflowTest() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=appointmentWorkflowTest status=SUCCESS method=mainClass.appointmentWorkflowTest()[pri:3, instance:drona.smoketestcases.mainClass@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestStatus -->
        <test-method signature="billMarkAsPaidWorkflowTest()[pri:4, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:03:00 IST" name="billMarkAsPaidWorkflowTest" finished-at="2024-12-06T00:03:26 IST" duration-ms="26196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- billMarkAsPaidWorkflowTest -->
        <test-method is-config="true" signature="checkTestStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:03:26 IST" name="checkTestStatus" finished-at="2024-12-06T00:03:26 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void drona.smoketestcases.mainClass.billMarkAsPaidWorkflowTest() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=billMarkAsPaidWorkflowTest status=SUCCESS method=mainClass.billMarkAsPaidWorkflowTest()[pri:4, instance:drona.smoketestcases.mainClass@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestStatus -->
        <test-method signature="createBillWorkflowTest()[pri:5, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:03:26 IST" name="createBillWorkflowTest" finished-at="2024-12-06T00:03:38 IST" duration-ms="12472" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillWorkflowTest -->
        <test-method is-config="true" signature="checkTestStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:03:38 IST" name="checkTestStatus" finished-at="2024-12-06T00:03:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void drona.smoketestcases.mainClass.createBillWorkflowTest() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=createBillWorkflowTest status=SUCCESS method=mainClass.createBillWorkflowTest()[pri:5, instance:drona.smoketestcases.mainClass@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestStatus -->
        <test-method signature="consultationUsingTemplateWorkflowTest()[pri:6, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:03:38 IST" name="consultationUsingTemplateWorkflowTest" finished-at="2024-12-06T00:04:27 IST" duration-ms="48506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- consultationUsingTemplateWorkflowTest -->
        <test-method is-config="true" signature="checkTestStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:04:27 IST" name="checkTestStatus" finished-at="2024-12-06T00:04:27 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void drona.smoketestcases.mainClass.consultationUsingTemplateWorkflowTest() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=consultationUsingTemplateWorkflowTest status=SUCCESS method=mainClass.consultationUsingTemplateWorkflowTest()[pri:6, instance:drona.smoketestcases.mainClass@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestStatus -->
        <test-method signature="walkInConsultationWorkflowTest()[pri:7, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:04:27 IST" name="walkInConsultationWorkflowTest" finished-at="2024-12-06T00:07:53 IST" duration-ms="206198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- walkInConsultationWorkflowTest -->
        <test-method is-config="true" signature="checkTestStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:07:53 IST" name="checkTestStatus" finished-at="2024-12-06T00:07:53 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void drona.smoketestcases.mainClass.walkInConsultationWorkflowTest() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=walkInConsultationWorkflowTest status=SUCCESS method=mainClass.walkInConsultationWorkflowTest()[pri:7, instance:drona.smoketestcases.mainClass@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestStatus -->
        <test-method signature="fileUploadWorkflowTest()[pri:8, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:07:53 IST" name="fileUploadWorkflowTest" finished-at="2024-12-06T00:08:40 IST" duration-ms="46647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fileUploadWorkflowTest -->
        <test-method is-config="true" signature="checkTestStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:08:40 IST" name="checkTestStatus" finished-at="2024-12-06T00:08:40 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void drona.smoketestcases.mainClass.fileUploadWorkflowTest() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=fileUploadWorkflowTest status=SUCCESS method=mainClass.fileUploadWorkflowTest()[pri:8, instance:drona.smoketestcases.mainClass@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestStatus -->
        <test-method signature="editPatientWorkflowTest()[pri:9, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:08:40 IST" name="editPatientWorkflowTest" finished-at="2024-12-06T00:09:05 IST" duration-ms="25340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editPatientWorkflowTest -->
        <test-method is-config="true" signature="checkTestStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:09:05 IST" name="checkTestStatus" finished-at="2024-12-06T00:09:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void drona.smoketestcases.mainClass.editPatientWorkflowTest() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=editPatientWorkflowTest status=SUCCESS method=mainClass.editPatientWorkflowTest()[pri:9, instance:drona.smoketestcases.mainClass@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestStatus -->
        <test-method signature="addNewPatientWorkflowTest()[pri:10, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:09:05 IST" name="addNewPatientWorkflowTest" finished-at="2024-12-06T00:09:21 IST" duration-ms="15896" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewPatientWorkflowTest -->
        <test-method is-config="true" signature="checkTestStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:09:21 IST" name="checkTestStatus" finished-at="2024-12-06T00:09:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void drona.smoketestcases.mainClass.addNewPatientWorkflowTest() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=addNewPatientWorkflowTest status=SUCCESS method=mainClass.addNewPatientWorkflowTest()[pri:10, instance:drona.smoketestcases.mainClass@1ed4ae0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestStatus -->
        <test-method is-config="true" signature="finalizeReports()[pri:0, instance:drona.smoketestcases.mainClass@1ed4ae0f]" started-at="2024-12-06T00:09:21 IST" name="finalizeReports" finished-at="2024-12-06T00:09:31 IST" duration-ms="9489" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finalizeReports -->
      </class> <!-- drona.smoketestcases.mainClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
